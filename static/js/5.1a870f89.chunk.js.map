{"version":3,"sources":["components/MoviesList/MoviesList.js","components/MovieSertch/MovieSertch.js","views/MoviesPage.js"],"names":["withRouter","lists","match","location","movieUrl","url","includes","map","movie","to","pathname","id","state","from","title","MoviesSerch","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","MoviesPage","movies","movieQuery","imagesPage","onChangeQuery","prevProps","prevState","fetchMovies","a","axios","get","response","console","log","data","results","MoviesList"],"mappings":"oMA0BeA,eAvBI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9BC,EAAWF,EAAMG,IAAIC,SAAS,UAAY,GAAK,SACnD,OAAOL,EAAMM,KAAI,SAACC,GAAD,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKR,EAAMG,KAAX,OAAiBD,EAAjB,YAA6BI,EAAMG,IAC3CC,MAAO,CAAEC,KAAMV,IAHnB,SAMGK,EAAMM,SAPFN,EAAMG,W,mICJEI,E,4MACnBH,MAAQ,CACNI,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKb,MAAMI,OAE/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,OACE,qBAAKU,UAAU,cAAf,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLP,MAAOM,KAAKf,MAAMI,MAClBa,SAAUF,KAAKV,aACfa,aAAa,MACbC,WAAS,EACTC,YAAY,0B,GA/BiBC,a,QCGnCC,E,4MACJtB,MAAQ,CACNuB,OAAQ,GACRC,WAAY,GACZC,WAAY,G,EASdC,cAAgB,SAACtB,GACf,EAAKG,SAAS,CACZiB,WAAYpB,K,wDARhB,SAAmBuB,EAAWC,GACxBA,EAAUJ,aAAeT,KAAKf,MAAMwB,YACtCT,KAAKc,gB,gEAUT,8BAAAC,EAAA,4DACkB,mCACRN,EAAeT,KAAKf,MAApBwB,WAFV,SAIyBO,IAAMC,IAAN,6DAHP,mCAGO,4DAC4FR,IALrH,OAIQS,EAJR,OAOEC,QAAQC,IAAIF,EAASG,KAAKC,SAC1BtB,KAAKR,SAAS,CAAEgB,OAAQU,EAASG,KAAKC,UARxC,gD,0EAWA,WACE,OACE,qCACE,cAAC,EAAD,CAAYxB,SAAUE,KAAKW,gBAK3B,oBAAIZ,UAAU,eAAd,SACE,cAACwB,EAAA,EAAD,CAAYjD,MAAO0B,KAAKf,MAAMuB,kB,GAvCfF,aA8CVC","file":"static/js/5.1a870f89.chunk.js","sourcesContent":["import { NavLink, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoviesList = ({ lists, match, location }) => {\r\n  let movieUrl = match.url.includes(\"movies\") ? \"\" : \"movies\";\r\n  return lists.map((movie) => (\r\n    <li key={movie.id}>\r\n      <NavLink\r\n        to={{\r\n          pathname: `${match.url}${movieUrl}/${movie.id}`,\r\n          state: { from: location },\r\n        }}\r\n      >\r\n        {movie.title}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  lists: PropTypes.array.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withRouter(MoviesList);\r\n","import { Component } from \"react\";\r\n\r\nexport default class MoviesSerch extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='movie-serch'>\r\n        <form className='SearchForm' onSubmit={this.handleSubmit}>\r\n          <button type='submit' className='SearchForm-button'>\r\n            <span className='SearchForm-button-label'>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className='SearchForm-input'\r\n            type='text'\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete='off'\r\n            autoFocus\r\n            placeholder='Search movie'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieSerch from \"../components/MovieSertch\";\r\nimport MoviesList from \"../components/MoviesList\";\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    movieQuery: \"\",\r\n    imagesPage: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.movieQuery !== this.state.movieQuery) {\r\n      this.fetchMovies();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = (query) => {\r\n    this.setState({\r\n      movieQuery: query,\r\n    });\r\n  };\r\n\r\n  async fetchMovies() {\r\n    const API_KIY = \"0823a515d685f87a50f7a5f1575b73b6\";\r\n    const { movieQuery } = this.state;\r\n\r\n    const response = await axios.get(\r\n      ` https://api.themoviedb.org/3/search/movie?api_key=${API_KIY}&language=en-US&page=1&include_adult=false&query=${movieQuery}`\r\n    );\r\n    console.log(response.data.results);\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MovieSerch onSubmit={this.onChangeQuery} />\r\n\r\n        {/* {this.state.movies.map(movie => <li key ={movie.id}>\r\n            <Link to={`${this.props.match.url}/${movie.id}`} >{movie.title}</Link>\r\n            </li>)} */}\r\n        <ul className='movies-lists'>\r\n          <MoviesList lists={this.state.movies} />\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}